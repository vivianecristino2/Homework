{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5435ff81",
   "metadata": {},
   "source": [
    "# Exercicios de Estatisticas \n",
    "\n",
    "\n",
    "**Responda:**\n",
    "\n",
    "\n",
    "-Média\n",
    "-Moda\n",
    "-Mediana\n",
    "-Percentis 25, 50, 75 e 100\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8fae5aab",
   "metadata": {},
   "outputs": [],
   "source": [
    "#importando algumas bibliotecas que serão úteis\n",
    "# importing some libraries that will be useful\n",
    "import pandas as pd #manipular tabela\n",
    "import seaborn as sns #manipular grafico\n",
    "import numpy as np #operações numpy\n",
    "import matplotlib.pyplot as plt #manipular grafico\n",
    "import statistics as st # estatisticas "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "0def80b6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#lendo arquivo csv\n",
    "#read file csv\n",
    "df = pd.read_csv('df_exemplo.csv',  delim_whitespace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "900e6747",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Float64Index: 774 entries, 44.0 to 36.7\n",
      "Data columns (total 6 columns):\n",
      " #   Column    Non-Null Count  Dtype  \n",
      "---  ------    --------------  -----  \n",
      " 0   Sta_ID    774 non-null    float64\n",
      " 1   Depth_ID  774 non-null    object \n",
      " 2   Depthm    774 non-null    int64  \n",
      " 3   T_degC    774 non-null    float64\n",
      " 4   O2Sat     774 non-null    float64\n",
      " 5   Salnty    774 non-null    float64\n",
      "dtypes: float64(4), int64(1), object(1)\n",
      "memory usage: 42.3+ KB\n"
     ]
    }
   ],
   "source": [
    "#informação sobre tabela\n",
    "# information about datafrema\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "dcda906f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean: 50.80284237726105 median: 45.05 mode: 0    5.9\n",
      "Name: O2Sat, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "mean = df['O2Sat'].mean()\n",
    "median = df['O2Sat'].median()\n",
    "mode = df['O2Sat'].mode()\n",
    "\n",
    "print('mean:', mean, 'median:',median, 'mode:', mode)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a48ac0a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    774.000000\n",
       "mean      50.802842\n",
       "std       37.697035\n",
       "min        3.400000\n",
       "25%        9.725000\n",
       "50%       45.050000\n",
       "75%       92.100000\n",
       "max      120.000000\n",
       "Name: O2Sat, dtype: float64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['O2Sat'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "326252c6",
   "metadata": {},
   "source": [
    "# calcule a variância de todas as variáveis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2c1072b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sta_ID</th>\n",
       "      <th>Depth_ID</th>\n",
       "      <th>Depthm</th>\n",
       "      <th>T_degC</th>\n",
       "      <th>O2Sat</th>\n",
       "      <th>Salnty</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>44.0</th>\n",
       "      <td>48.5</td>\n",
       "      <td>19-4904CR-HY-087-0606-04400485-0000B-3</td>\n",
       "      <td>0</td>\n",
       "      <td>10.30</td>\n",
       "      <td>92.8</td>\n",
       "      <td>33.030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44.0</th>\n",
       "      <td>48.5</td>\n",
       "      <td>19-4904CR-HY-087-0606-04400485-0006A-3</td>\n",
       "      <td>6</td>\n",
       "      <td>18.46</td>\n",
       "      <td>111.8</td>\n",
       "      <td>32.920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44.0</th>\n",
       "      <td>48.5</td>\n",
       "      <td>19-4904CR-HY-087-0606-04400485-0010A-7</td>\n",
       "      <td>10</td>\n",
       "      <td>10.29</td>\n",
       "      <td>95.0</td>\n",
       "      <td>32.951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44.0</th>\n",
       "      <td>48.5</td>\n",
       "      <td>19-4904CR-HY-087-0606-04400485-0015A-3</td>\n",
       "      <td>15</td>\n",
       "      <td>10.29</td>\n",
       "      <td>95.3</td>\n",
       "      <td>32.990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44.0</th>\n",
       "      <td>48.5</td>\n",
       "      <td>19-4904CR-HY-087-0606-04400485-0020A-7</td>\n",
       "      <td>20</td>\n",
       "      <td>10.33</td>\n",
       "      <td>95.1</td>\n",
       "      <td>33.005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36.7</th>\n",
       "      <td>115.0</td>\n",
       "      <td>19-4911BD-HY-318-2130-03671150-0921A-3</td>\n",
       "      <td>921</td>\n",
       "      <td>3.91</td>\n",
       "      <td>4.8</td>\n",
       "      <td>34.370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36.7</th>\n",
       "      <td>115.0</td>\n",
       "      <td>19-4911BD-HY-318-2130-03671150-1000A-7</td>\n",
       "      <td>1000</td>\n",
       "      <td>3.73</td>\n",
       "      <td>5.4</td>\n",
       "      <td>34.401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36.7</th>\n",
       "      <td>115.0</td>\n",
       "      <td>19-4911BD-HY-318-2130-03671150-1100A-7</td>\n",
       "      <td>1100</td>\n",
       "      <td>3.51</td>\n",
       "      <td>6.4</td>\n",
       "      <td>34.440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36.7</th>\n",
       "      <td>115.0</td>\n",
       "      <td>19-4911BD-HY-318-2130-03671150-1200A-7</td>\n",
       "      <td>1200</td>\n",
       "      <td>3.29</td>\n",
       "      <td>7.3</td>\n",
       "      <td>34.481</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36.7</th>\n",
       "      <td>115.0</td>\n",
       "      <td>19-4911BD-HY-318-2130-03671150-1247A-3</td>\n",
       "      <td>1247</td>\n",
       "      <td>3.18</td>\n",
       "      <td>7.6</td>\n",
       "      <td>34.500</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>774 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Sta_ID                                Depth_ID  Depthm  T_degC  O2Sat  \\\n",
       "44.0    48.5  19-4904CR-HY-087-0606-04400485-0000B-3       0   10.30   92.8   \n",
       "44.0    48.5  19-4904CR-HY-087-0606-04400485-0006A-3       6   18.46  111.8   \n",
       "44.0    48.5  19-4904CR-HY-087-0606-04400485-0010A-7      10   10.29   95.0   \n",
       "44.0    48.5  19-4904CR-HY-087-0606-04400485-0015A-3      15   10.29   95.3   \n",
       "44.0    48.5  19-4904CR-HY-087-0606-04400485-0020A-7      20   10.33   95.1   \n",
       "...      ...                                     ...     ...     ...    ...   \n",
       "36.7   115.0  19-4911BD-HY-318-2130-03671150-0921A-3     921    3.91    4.8   \n",
       "36.7   115.0  19-4911BD-HY-318-2130-03671150-1000A-7    1000    3.73    5.4   \n",
       "36.7   115.0  19-4911BD-HY-318-2130-03671150-1100A-7    1100    3.51    6.4   \n",
       "36.7   115.0  19-4911BD-HY-318-2130-03671150-1200A-7    1200    3.29    7.3   \n",
       "36.7   115.0  19-4911BD-HY-318-2130-03671150-1247A-3    1247    3.18    7.6   \n",
       "\n",
       "      Salnty  \n",
       "44.0  33.030  \n",
       "44.0  32.920  \n",
       "44.0  32.951  \n",
       "44.0  32.990  \n",
       "44.0  33.005  \n",
       "...      ...  \n",
       "36.7  34.370  \n",
       "36.7  34.401  \n",
       "36.7  34.440  \n",
       "36.7  34.481  \n",
       "36.7  34.500  \n",
       "\n",
       "[774 rows x 6 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f691caa7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "37.697035164794364\n"
     ]
    }
   ],
   "source": [
    "# Desvido\n",
    "\n",
    "desvio = df['O2Sat'].std()\n",
    "print(desvio)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9f0d5ffd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1421.066460215744"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Variancia \n",
    "\n",
    "variancia = st.variance(df['O2Sat'])\n",
    "variancia"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ffff00c",
   "metadata": {},
   "source": [
    "# Plote as distribuições"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5769c41f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([180.,  53.,  36.,  25.,  38.,  23.,  28.,  27.,  15.,  20.,  19.,\n",
       "         20.,  25.,  26.,  28.,  89.,  76.,  37.,   8.,   1.]),\n",
       " array([  3.4 ,   9.23,  15.06,  20.89,  26.72,  32.55,  38.38,  44.21,\n",
       "         50.04,  55.87,  61.7 ,  67.53,  73.36,  79.19,  85.02,  90.85,\n",
       "         96.68, 102.51, 108.34, 114.17, 120.  ]),\n",
       " <BarContainer object of 20 artists>)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plote \n",
    "\n",
    "plt.hist(df['O2Sat'], bins =20)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4db58b2",
   "metadata": {},
   "source": [
    "# calculando assimetria "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "df25d934",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-2.9037855714601697e-36"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# assimetria \n",
    "media = df['O2Sat'].mean()\n",
    "desvio = df['O2Sat'].std()\n",
    "numerador = sum(df['O2Sat']- df['O2Sat'].mean())**3\n",
    "denominador = (desvio)**3\n",
    "assimetria = numerador/denominador\n",
    "assimetria"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e183998e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# calculando curtose"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "d6816999",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4.142724543219848e-48"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# curtose \n",
    "media = df['O2Sat'].mean()\n",
    "desvio = df['O2Sat'].std()\n",
    "numerador = sum(df['O2Sat']- df['O2Sat'].mean())**4\n",
    "denominador = (desvio)**4\n",
    "curtose = numerador/denominador\n",
    "curtose"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "66ed2c9e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
